# jobs section of the circle.yml defines a task or set of tasks to be run
# for CI process. CircleCI allows you to configure multiple jobs for more
# complex CI processes, but for our purposes, a single job task is all we need

orbs:
  aws-ecr: circleci/aws-ecr@6.7.1
  aws-ecs: circleci/aws-ecs@1.1.0

version: 2.1
workflows:
  build-and-deploy:
    jobs:
      - aws-ecr/build-and-push-image:
          account-url: AWS_ECR_ACCOUNT_URL_ENV_VAR_NAME
          aws-access-key-id: '${AWS_ACCESS_KEY_ID}'
          aws-secret-access-key: '${AWS_SECRET_ACCESS_KEY}'
          dockerfile: 'Dockerfile'
          path: ~/project
          repo: 'basic-nodejs-app-ecr' #checker ce qui est obligatoire
          region: AWS_REGION
      - aws-ecs/deploy-service-update:
          requires:
            - aws-ecr/build-and-push-image
          family: 'basic-nodejs-app-task-definition'
          cluster-name: 'basic-nodejs-app-cluster'
          service-name: 'basic-nodejs-app-service'
jobs:
  # The build section defines the name for the job. So in this case, the name of
  # the job is simply build
  build:
    # The docker section defines an executor for the build process. And executor
    # is a place where build steps will occur. By specifying docker, we are telling
    # Circle that we want our build steps to take place inside of a Docker container.
    # For comparison sake, if we were building an iOS application instead of a node.js
    # application, we would replace 'docker' with macos. This would tell Circle that
    # we want our tests to take place on a MacOS machines as opposed to a Docker image
    docker:
      - image: circleci/node:10.15.3
    working_directory: ~/project
    steps:
      # checkout - a CircleCI built in command whic h is responsible for checking
      # out the project's source code into the Job's working_directory we discussed above
      - checkout
      - run: npm install
      - run: npm test
#how to know if it's syntaxically correct
#how to know if
#what is the prupose of orbs:
#what is the purpose of workflows:
#what is the purpose of workflow
#how to know the version to use for the executor

